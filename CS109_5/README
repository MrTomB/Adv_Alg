/*---------------------------
Thomas Burch (tburch1@ucsc.edu)
CMPS 109 Program 5
Client/Server and Sockets
8/11/15
------------------------------*/

This project will implement a client/server application using sockets. A daemon
(cixd) listens on a socket for client connection requests. Each connection will cause
the server to fork a child process to serve the client. The daemon runs in an infinite
loop listening. The server exits when the client disconnects. A client (cix) connects
to a server and can send files, receive files, and get a summary listing of all files
present.
A socket is a two-way means of communication between processes, not necessarily
running on the same host. An IPv4 host is know by a 4-octet sequence such as
128.114.108.152, and a port is an unsigned 16-bit number (0 to 65535). Communication
will be done via TCP/IP over IPv4 sockets.


SYNOPSIS:
cixd
Usage : cixd [port]
Creates a server socket and goes into an infinite loop : When it accepts a client
socket, it uses fork(2) to create a child process, which functions as the server to
communicate with the client.
The daemon listens for connections on the given port, if specified. If not, the
environment variable CIX_SERVER_PORT is used to determine the port. There is
no default port.
The server is forked with an open socket communicating with the client. Its
loop repeatedly reads commands and information from the client and acts on
those commands, returning information back to the client. Its loop will be a
receive followed by a send, responding to client requests. It exits when the
client closes the socket. It does no terminal I/O except possibly for debugging
purposes.

cix
Usage : cix [host] [port]
The client interacts with the user. Commands are read from the terminal (or
redirect), each of which is executed one at a time by communicating with the
server. Results are then displayed at the terminal.
The client connects to the given host, if specified. If not specified, the environment
variable CIX_SERVER_HOST is used as the host to connect to. If not speci-
fied, localhost is used. It tries to connect to the given port, if specified. If not,
the environment variable CIX_SERVER_PORT is used to determine the port.
There is no default port.


DESCRIPTION:
exit
Quit the program. An end of file marker or Control/D is equivalent.

get filename
Copy the file named filename on the remote server and create or overwrite a
file of the same name in the current directory.

help
A summary of available commands is printed.

ls
Causes the remote server to execute the command ls -l and prints the output
to the userâ€™s terminal.

put filename
Copies a local file into the socket and causes the remote server to create that
file in its directory.

rm filename
Causes the remote server to remove the file.

